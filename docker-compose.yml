services:
  exporter:
    container_name: pool-exporter
    restart: unless-stopped
    volumes:
      - ./config.yml:/code/config.yml:ro
    healthcheck:
      test: [
        "CMD",
        "python",
        "-c",
        "import urllib.request; urllib.request.urlopen('http://localhost:8000/metrics')",
      ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - pool-network

  prometheus:
    image: prom/prometheus:v3.6.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=90d"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
    networks:
      - pool-network
    depends_on:
      - exporter

  grafana:
    image: grafana/grafana:12.2.0
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - pool-network
    depends_on:
      - prometheus

networks:
  pool-network:
    name: pool-network
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
