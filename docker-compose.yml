services:
  collector:
    build:
      context: ./zurich-pool-collector
      tags:
        - alakae/badi-meter-collector
    container_name: pool-collector
    restart: unless-stopped
    ports:
      - "8000:8000"  # Expose metrics port
    volumes:
      - ./zurich-pool-collector/config.yml:/code/config.yml:ro
    healthcheck:
      test: ["CMD", "devbox", "run", "--", "poetry", "run", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/metrics')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - pool-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:v3.3.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "8090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - pool-network
    depends_on:
      - collector
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  pool-network:
    name: pool-network
    driver: bridge

volumes:
  prometheus_data:
